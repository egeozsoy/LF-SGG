#!/bin/sh

#SBATCH --job-name=lf_sgg
#SBATCH --output=lf_sgg-%A.out  # Standard output of the script (Can be absolute or relative path). %A adds the job id to the file name so you can launch the same script multiple times and get different logging files
#SBATCH --error=lf_sgg-%A.err  # Standard error of the script
#SBATCH --time=0-160:00:00  # Limit on the total run time (format: days-hours:minutes:seconds)
#SBATCH --gres=gpu:1  # Number of GPUs if needed
#SBATCH --cpus-per-task=12  # Number of CPUs (Don't use more than 24 per GPU)
#SBATCH --mem=128G  # Memory in GB (Don't use more than 126G per GPU), maybe 128?

# activate corresponding environment
# conda deactivate # If you launch your script from a terminal where your environment is already loaded, conda won't activate the environment. This guards against that. Not necessary if you always run this script from a clean terminal
source ~/miniconda3/etc/profile.d/conda.sh
conda activate LF-SGG

# run the program Both for training and evaluation, make sure to change the task mode between train/eval
python -u -m scene_graph_prediction.main_psg --config pix2sg_b5.json
#python -u -m scene_graph_prediction.main_psg --config pix2sg_b7.json
#python -u -m scene_graph_prediction.main_psg --config pix2sg_eva_base_freeze8.json
#python -u -m scene_graph_prediction.main_psg --config pix2sg_eva_base_freeze16.json


## run the program Both for training and evaluation, make sure to change the task mode between train/eval
#python -u -m scene_graph_prediction.main_vg --config pix2sg_b5.json
#python -u -m scene_graph_prediction.main_vg --config pix2sg_b7.json
#python -u -m scene_graph_prediction.main_vg --config pix2sg_eva_base_freeze8.json
#python -u -m scene_graph_prediction.main_vg --config pix2sg_eva_base_freeze16.json
